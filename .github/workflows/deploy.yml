name: Build and Push Docker Image to AWS ECR

on:
  push:
    branches:
      - main
      - feat/*

env:
  AWS_REGION: ap-southeast-2  # AWS 리전 (서울 리전)
  ECR_REPOSITORY: countdown10shop
  IMAGE_TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: 리포지토리 체크아웃
        uses: actions/checkout@v3

      - name: AWS 자격 증명 설정
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set ECR_REGISTRY env variable
        run: echo "ECR_REGISTRY=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV

      - name: Build, tag, and push image to Amazon ECR
        run: |
          echo "ECR Registry: $ECR_REGISTRY"
          docker build -f ./Dockerfile.spring -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |            
#            기존 도커 정지
            docker stop container || true
            docker rm container || true
            docker rmi ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} || true
            
#            이미지 다운로드
            aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REGISTRY }}
            docker pull ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
            
#            이미지 시작
            docker run -d -p 8080:8080\
            -e "DB_URL=${{ secrets.AWS_RDS_URL }}"\
            -e "DB_USER=${{ secrets.AWS_RDS_USER }}"\
            -e "DB_USER_PASSWORD=${{ secrets.AWS_RDS_USER_PASSWORD }}"\
            --ulimit nproc=60000\
            --net count10shop_default\
            --name container\
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}